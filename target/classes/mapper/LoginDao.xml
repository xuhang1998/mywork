<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.entity.User">
        <result column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="telephone" property="telephone" />
        <result column="birthday" property="birthday" />
        <result column="sex" property="sex" />
        <result column="nickname" property="nickname" />
        <result column="address" property="address" />
        <result column="hobby" property="hobby" />
        <result column="headImage" property="headImage" />
        <result column="salt" property="salt" />
        <result column="zt" property="zt" />
    </resultMap>
    <select id="getUser" parameterType="java.lang.String" resultType="com.entity.User">
        select *from user where user.username=#{name}
    </select>
    <update id="update" parameterType="com.entity.User">
        update user t
        <set>
            <if test="user != null">
            <if test="user.username != null and user.username !='' ">
                t.username = #{user.username},
            </if>
            <if test="user.nickname != null and user.nickname !=''">
                t.nickname = #{user.nickname},
            </if>
            <if test="user.telephone != null and user.telephone !=''">
                t.telephone = #{user.telephone},
            </if>
            <if test="user.birthday.toString() != null and user.birthday.toString() !=''">
                t.birthday = #{user.birthday},
            </if>
            <if test="user.sex != null and user.sex !=''">
                t.sex = #{user.sex},
            </if>
            <if test="user.address != null and user.address !=''">
                t.address = #{user.address},
            </if>
            <if test="user.hobby != null and user.hobby !=''">
                t.hobby = #{user.hobby},
            </if>
            <if test="user.headImage != null and user.headImage !=''">
                t.headImage = #{user.headImage},
            </if>
            </if>
        </set>
        where t.id = #{user.id}
    </update>

    <update id="changePassword">
        update user t
    <set>
    t.password = #{password},

     </set>
            where t.id = #{id}

    </update>
    <select id="selectAll" resultType="com.entity.User">
        select *from user limit #{page},#{limit};
    </select>
    <select id="getById" resultType="com.entity.User">
        select *from user where user.id = #{id}
    </select>
    <insert id="saveUser" parameterType="com.entity.User">
        insert into user(id,username,password,telephone,birthday,sex,nickname,address,hobby,salt,zt) values(#{user.id},#{user.username},#{user.password},#{user.telephone},
                                #{user.birthday},#{user.sex},#{user.nickname},#{user.address},#{user.hobby},#{user.salt},#{user.zt})
    </insert>
<select id="findByPid" parameterType="java.lang.Integer" resultType="com.entity.PCD">
    select *from province_city_district p where p.pid = #{pid}
</select>
    <select id="hobbyAll" resultType="com.entity.hobby">
        select *from hobby
    </select>
    <select id="getHobbyById" resultType="String" parameterType="java.util.List">
        select name from hobby h where h.id in
        <foreach collection="hobbyIds" item="item" index="index" open="(" separator="," close=")">
             #{item}
        </foreach>
    </select>
    <insert id="saveUser_hobby">
        insert into user_hobby(userId,hobbyId) values
        <foreach collection="hid" item="hobbyId"
                 separator=",">
            (#{uid}, #{hobbyId})
        </foreach>
    </insert>
    <insert id="saveUser_permission">
        insert into user_permission(userId,permissionId) values
        <foreach collection="pid" item="permissionId"
                 separator=",">
            (#{uid},#{permissionId})
        </foreach>
    </insert>
    <select id="getHobbyByUserId" resultType="integer">
        select hobbyId from user_hobby where userId=#{uid}
    </select>
    <delete id="deleteHobbyById">
        delete from user_hobby where userId=#{uid}
    </delete>
    <delete id="deletePermissionById">
        delete from user_permission where userId=#{uid}
    </delete>
    <select id="findByUid" resultType="com.entity.User_permission">
        select *from user_permission up where up.userId=#{uid}
    </select>
    <!--<update id="updateZt" parameterType="com.entity.User">
        update user t
          <set>
              <choose>
                  <when test="user.zt == '1'">
                      t.zt='0'
                  </when>
                  <otherwise>
                      t.zt='1'
                  </otherwise>
              </choose>
          </set>
where t.username = #{user.username}
    </update>-->
    <update id="updateZt" parameterType="com.entity.User">
        update user t
        <set>
            t.zt=#{zt}
        </set>
        where t.username = #{u}
    </update>
<select id="getAllName" resultType="String">
    select username from user
</select>
    <select id="checkPhoneUnique" resultType="Integer">
        select count(*) from user u where u.telephone = #{t}
    </select>
</mapper>
